spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: test
  rabbitmq:
    username: guest
    password: guest
    port: 5672
  cloud:
    stream:
      rabbit:
        bindings:
          event-output:
            producer:
#              spring.cloud.stream.rabbit.bindings.requestChannel.producer.routing-key-expression=payload.eventType
#              The problem is that the payload has already been serialized by the time the message reaches the channel adapter (where the routing key expression is evaluated).
#              One solution would be to set a message header to the eventType field, before sending the message, and then use:
#              spring.cloud.stream.rabbit.bindings.requestChannel.producer.routing-key-expression=headers.eventType.
              routing-key-expression: headers.type
          a-event-input:
            consumer:
              binding-routing-key: a
          b-event-input:
            consumer:
              binding-routing-key: b
          event-input:
            consumer:
              #              requeue-rejected: true
              auto-bind-dlq: true
              republish-to-dlq: true
              acknowledge-mode: MANUAL
              prefetch: 3

#          aa-event:
#            producer:
#              exchangeType: direct
#            consumer:
#              exchangeType: direct
#      kafka:
#        binder:
#          brokers: 127.0.0.1:9092
#          zk-nodes: 127.0.0.1:2181
#          headers: eventType
      bindings:
        event-output:
          destination: service-event
#          content-type: application/json
#        event-input:
#          destination: service-event
#          group: ${spring.application.name}
#          consumer:
#            concurrency: 3
##            max-attempts: 4
#        a-event-input:
#          destination: service-event
#          group: an
#        b-event-input:
#          destination: service-event
#          group: bn



#        event-bus-input-ext:
#          destination: institution-service-event
#          group: ${spring.application.name}
#          content-type: application/json


logging:
  level:
    org.springframework: info
    com.guns21: debug